{"version":3,"sources":["features/name/Name.module.css","features/game/Game.module.css","domain/piece.ts","factory/pieceFactory.ts","utils/utils.ts","core/game.ts","features/game/gameSlice.ts","features/board/Board.tsx","features/name/Name.tsx","features/stock/Stock.tsx","features/game/Game.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/board/Board.module.css","features/stock/Stock.module.css"],"names":["module","exports","PieceType","pool","find","id","piece","incremental","newPiece","type","owner","ownerId","changeOwner","player","this","nari","Hisha","Ryuuoh","Kaku","Ryuuma","Gin","Narigin","Keima","Narikei","Kyohsha","Narikyoh","Hu","Tokin","omote","toString","Oh","Gyoku","Kin","push","convertToPositionFromIndex","index","width","Math","floor","convertToIndexFromPosition","position","x","y","comparePositions","p1","p2","x1","y1","x2","y2","boardWidth","player1","name","player2","calculateMovablePositions","pieceId","board","upsideDown","findPiece","indexOf","isExistsPiece","calculateMovableLiens","direction","dx","dy","positions","i","filter","getPiece","initialState","nextPlayer","stocks","selectedPieceId","boardSlice","createSlice","reducers","move","state","action","payload","includes","splice","selectPieceId","actions","selectNextPlayer","game","selectBoard","selectStocks","selectSelectedPieceId","Cell","isActive","isFocused","onClickCell","className","classNames","styles","cell","activeCell","focusedCell","onClick","Board","dispatch","useDispatch","useSelector","selectedPiece","selectPiece","focusedPosition","activePositions","forEach","v","idx","calculatePuttablePositions","map","p","length","putPiece","upsdieDown","callback","isNeed","window","confirm","confirmNariIfNeed","isSelectablePiece","Name","active","Row","pieces","row","focusedPiece","Stock","arr","getKey","pieceIds","stock","reduce","acc","cur","src","key","item","sort","a","b","isSelected","Game","container","App","store","configureStore","reducer","gameReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e1d9c70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__GbJQ_\",\"active\":\"Name_active__2a4Et\",\"upsideDown\":\"Name_upsideDown__2VXDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game___e9Nk\",\"container\":\"Game_container__tbffW\"};","import { Player } from \"./player\";\n\nexport enum PieceType {\n  Oh,\n  Gyoku,\n  Hisha,\n  Kaku,\n  Kin,\n  Gin,\n  Keima,\n  Kyohsha,\n  Hu,\n  Ryuuoh,\n  Ryuuma,\n  Narigin,\n  Narikei,\n  Narikyoh,\n  Tokin\n}\n\nexport interface Piece extends Object {\n  id: number;\n  type: PieceType;\n  ownerId: number;\n  changeOwner(player: Player): void;\n  nari(): void;\n  omote(): void;\n}\n","import { Piece, PieceType } from \"../domain/piece\";\nimport { Player } from \"../domain/player\";\n\nconst pool: Piece[] = [];\n\nexport const find = (id: number): Piece|null => {\n  return pool.find(piece => piece.id === id) || null;\n};\n\nlet incremental: number = 1;\n\nexport const newPiece = (type: PieceType, owner: Player): Piece => {\n  const piece: Piece = {\n    id: incremental++,\n    type,\n    ownerId: owner.id,\n    changeOwner(player) {\n      this.ownerId = player.id;\n    },\n    nari() {\n      if (this.type === PieceType.Hisha) {\n        this.type = PieceType.Ryuuoh;\n      }\n      if (this.type === PieceType.Kaku) {\n        this.type = PieceType.Ryuuma;\n      }\n      if (this.type === PieceType.Gin) {\n        this.type = PieceType.Narigin;\n      }\n      if (this.type === PieceType.Keima) {\n        this.type = PieceType.Narikei;\n      }\n      if (this.type === PieceType.Kyohsha) {\n        this.type = PieceType.Narikyoh;\n      }\n      if (this.type === PieceType.Hu) {\n        this.type = PieceType.Tokin;\n      }\n    },\n    omote() {\n      if (this.type === PieceType.Ryuuoh) {\n        this.type = PieceType.Hisha;\n      }\n      if (this.type === PieceType.Ryuuma) {\n        this.type = PieceType.Kaku;\n      }\n      if (this.type === PieceType.Narigin) {\n        this.type = PieceType.Gin;\n      }\n      if (this.type === PieceType.Narikei) {\n        this.type = PieceType.Keima;\n      }\n      if (this.type === PieceType.Narikyoh) {\n        this.type = PieceType.Kyohsha;\n      }\n      if (this.type === PieceType.Tokin) {\n        this.type = PieceType.Hu;\n      }\n    },\n    toString() {\n      switch (this.type) {\n        case PieceType.Oh:\n          return \"王\";\n        case PieceType.Gyoku:\n          return \"玉\";\n        case PieceType.Hisha:\n          return \"飛\";\n        case PieceType.Kaku:\n          return \"角\";\n        case PieceType.Kin:\n          return \"金\";\n        case PieceType.Gin:\n          return \"銀\";\n        case PieceType.Keima:\n          return \"桂\";\n        case PieceType.Kyohsha:\n          return \"香\";\n        case PieceType.Hu:\n          return \"歩\";\n        case PieceType.Ryuuoh:\n          return \"竜\";\n        case PieceType.Ryuuma:\n          return \"馬\";\n        case PieceType.Narigin:\n          return \"全\";\n        case PieceType.Narikei:\n          return \"圭\";\n        case PieceType.Narikyoh:\n          return \"杏\";\n        case PieceType.Tokin:\n          return \"と\";\n        default:\n          return\"\";\n      }\n    }\n  };\n  pool.push(piece);\n  return piece;\n};\n","import { Position } from \"../domain/position\";\nimport { boardWidth as width } from \"../core/game\";\n\nexport const convertToPositionFromIndex = (index: number): Position =>\n  [index % width, Math.floor(index / width)];\n\nexport const convertToIndexFromPosition = (position: Position): number => {\n  const [x, y] = position;\n  return x + width * y;\n};\n\nexport const comparePositions = (p1: Position, p2: Position): boolean => {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n  return x1 === x2 && y1 === y2;\n};\n\nexport const isContainPosition = (position: Position, positions: Position[]): boolean => \n  positions.filter(p => comparePositions(p, position)).length > 0;\n\nexport const groupBy = <K, V>(arr: readonly V[], getKey: (cur: V, idx: number, src: readonly V[]) => K): V[][] =>\n  arr.reduce((acc, cur, idx, src) => {\n    const key = getKey(cur, idx, src);\n    const item = acc.find(([k,]) => k === key);\n    if (item) {\n      const [, v] = item;\n      v.push(cur);\n    } else {\n      acc.push([key, [cur]]);\n    }\n    return acc;\n  }, [] as [K, V[]][])\n  .map(([, v]) => v);\n","import { Piece, PieceType } from \"../domain/piece\";\nimport { find as findPiece, newPiece } from \"../factory/pieceFactory\";\nimport { Player } from \"../domain/player\";\nimport { Position } from \"../domain/position\";\nimport { convertToPositionFromIndex, convertToIndexFromPosition } from \"../utils/utils\";\n\nexport const boardWidth = 9;\n\nexport const player1: Player = { id: 1, name: \"Player1\" };\nexport const player2: Player = { id: 2, name: \"Player2\" };\n\nexport const initializeBoard = (): (number|null)[] => [\n  newPiece(PieceType.Kyohsha, player2).id,\n  newPiece(PieceType.Keima, player2).id,\n  newPiece(PieceType.Gin, player2).id,\n  newPiece(PieceType.Kin, player2).id,\n  newPiece(PieceType.Gyoku, player2).id,\n  newPiece(PieceType.Kin, player2).id,\n  newPiece(PieceType.Gin, player2).id,\n  newPiece(PieceType.Keima, player2).id,\n  newPiece(PieceType.Kyohsha, player2).id,\n  null, newPiece(PieceType.Hisha, player2).id,\n  null, null, null, null, null,\n  newPiece(PieceType.Kaku, player2).id, null,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  newPiece(PieceType.Hu, player2).id,\n  null, null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null, null,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  newPiece(PieceType.Hu, player1).id,\n  null, newPiece(PieceType.Kaku, player1).id,\n  null, null, null, null, null,\n  newPiece(PieceType.Hisha, player1).id, null,\n  newPiece(PieceType.Kyohsha, player1).id,\n  newPiece(PieceType.Keima, player1).id,\n  newPiece(PieceType.Gin, player1).id,\n  newPiece(PieceType.Kin, player1).id,\n  newPiece(PieceType.Oh, player1).id,\n  newPiece(PieceType.Kin, player1).id,\n  newPiece(PieceType.Gin, player1).id,\n  newPiece(PieceType.Keima, player1).id,\n  newPiece(PieceType.Kyohsha, player1).id,\n];\n\nexport const calculateMovablePositions = (pieceId: number, board: (number|null)[], upsideDown: boolean): Position[] => {\n  const piece = findPiece(pieceId);\n  if (piece === null) {\n    return [];\n  }\n  const index = board.indexOf(pieceId);\n  const [x, y] = convertToPositionFromIndex(index);\n\n  const isExistsPiece = (position: Position): boolean => {\n    const index = convertToIndexFromPosition(position);\n    return board[index] !== null;\n  };\n\n  const getPiece = (position: Position): Piece|null => {\n    const index = convertToIndexFromPosition(position);\n    const pieceId = board[index];\n    if (pieceId === null) {\n      return null;\n    }\n    return findPiece(pieceId);\n  };\n\n  const calculateMovableLiens = (direction: [number, number]): Position[] => {\n    const [dx, dy] = direction;\n    let positions: Position[] = [];\n    for (let i = 0; i < 8; i++) {\n      const position: Position = [x + dx * (i + 1), y + dy * (i + 1)];\n      if (position[0] < 0 || position[0] > 8 || position[1] < 0 || position[1] > 8) {\n        break;\n      }\n      positions = [...positions, position];\n      \n      if (isExistsPiece(position)) {\n        break;\n      }\n    }\n    return positions;\n  };\n\n  let positions: Position[] = [];\n  switch(piece.type) {\n    case PieceType.Oh:\n    case PieceType.Gyoku:\n      positions = [\n        [x, y + 1], [x, y - 1], [x + 1, y], [x - 1, y],\n        [x + 1, y + 1], [x - 1, y - 1], [x + 1, y - 1], [x - 1, y + 1],\n      ];\n      break;\n    case PieceType.Kin:\n    case PieceType.Narigin:\n    case PieceType.Narikei:\n    case PieceType.Narikyoh:\n    case PieceType.Tokin:\n      positions = upsideDown ?\n        [[x, y + 1], [x + 1, y + 1], [x - 1, y + 1], [x - 1, y], [x + 1, y], [x, y - 1]] :\n        [[x, y - 1], [x + 1, y - 1], [x - 1, y - 1], [x - 1, y], [x + 1, y], [x, y + 1]];\n      break;\n    case PieceType.Gin:\n      positions = upsideDown ?\n        [[x, y + 1], [x + 1, y + 1], [x - 1, y + 1], [x - 1, y - 1], [x + 1, y - 1]] :\n        [[x, y - 1], [x + 1, y - 1], [x - 1, y - 1], [x - 1, y + 1], [x + 1, y + 1]];\n      break;\n    case PieceType.Keima:\n      positions = upsideDown ? [[x - 1, y + 2], [x + 1, y + 2]] : [[x - 1, y - 2], [x + 1, y - 2]];\n      break;\n    case PieceType.Kyohsha:\n      positions = calculateMovableLiens(upsideDown ? [0, 1] : [0, -1]);\n      break;\n    case PieceType.Hu:\n      positions = upsideDown ? [[x, y + 1]] : [[x, y - 1]];\n      break;\n    case PieceType.Hisha:\n      positions = [\n        ...calculateMovableLiens([1, 0]), ...calculateMovableLiens([-1, 0]),\n        ...calculateMovableLiens([0, 1]), ...calculateMovableLiens([0, -1])\n      ];\n      break;\n    case PieceType.Kaku:\n      positions = [\n        ...calculateMovableLiens([1, 1]), ...calculateMovableLiens([-1, -1]),\n        ...calculateMovableLiens([1, -1]), ...calculateMovableLiens([-1, 1])\n      ];\n      break;\n    case PieceType.Ryuuoh:\n      positions = [\n        ...calculateMovableLiens([1, 0]), ...calculateMovableLiens([-1, 0]),\n        ...calculateMovableLiens([0, 1]), ...calculateMovableLiens([0, -1]),\n        [x + 1, y + 1], [x - 1, y + 1], [x + 1, y - 1], [x - 1, y - 1],\n      ];\n      break;\n    case PieceType.Ryuuma:\n      positions = [\n        ...calculateMovableLiens([1, 1]), ...calculateMovableLiens([-1, -1]),\n        ...calculateMovableLiens([1, -1]), ...calculateMovableLiens([-1, 1]),\n        [x, y + 1], [x, y - 1], [x + 1, y], [x - 1, y],\n      ];\n      break;\n  }\n  positions = positions.filter(position => getPiece(position)?.ownerId !== piece.ownerId);\n  return positions;\n};\n\nexport const calculatePuttablePositions = (board: (number|null)[]): Position[] => {\n  const positions: Position[] = [];\n  board.forEach((v, idx) =>{\n    if (v === null)\n      positions.push(convertToPositionFromIndex(idx));\n  });\n  return positions;\n};\n\nexport const confirmNariIfNeed =\n  (piece: Piece, position: Position, board: (number|null)[], upsdieDown: boolean, callback: () => void) => {\n    let isNeed: boolean;\n    switch(piece.type) {\n      case PieceType.Hisha:\n      case PieceType.Kaku:\n      case PieceType.Gin:\n      case PieceType.Keima:\n      case PieceType.Kyohsha:\n      case PieceType.Hu:\n        const [, y] = position;\n        isNeed = ((y < 3 && !upsdieDown) || (y > 5 && upsdieDown)) && board.includes(piece.id);\n        break;\n      default:\n        isNeed = false;\n        break;\n    }\n    if (!isNeed) {\n      return;\n    }\n    if (window.confirm(\"成りますか？\")) {\n      callback();\n    }\n  };\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { initializeBoard, player1, player2 } from \"../../core/game\";\nimport { Player } from \"../../domain/player\";\nimport { Position } from \"../../domain/position\";\nimport { find as findPiece } from \"../../factory/pieceFactory\";\nimport { convertToIndexFromPosition } from \"../../utils/utils\";\n\ninterface State {\n  nextPlayer: Player;\n  board: (number|null)[];\n  stocks: number[];\n  selectedPieceId: number|null;\n}\n\nconst initialState: State = {\n  nextPlayer: player1,\n  board: initializeBoard(),\n  stocks: [],\n  selectedPieceId: null,\n};\n\nexport const boardSlice = createSlice({\n  name: 'board',\n  initialState,\n  reducers: {\n    move: (state, action: PayloadAction<{ pieceId: number, position: Position }>) => {\n      const { pieceId, position } = action.payload;\n      const { nextPlayer, board, stocks } = state;\n      const piece = findPiece(pieceId)!!;\n      if (board.includes(piece.id)) {\n        board[board.indexOf(piece.id)] = null;\n      }\n      if (stocks.includes(piece.id)) {\n        stocks.splice(stocks.indexOf(piece.id), 1);\n      }\n      const index = convertToIndexFromPosition(position);\n      if (board[index] !== null) {\n        findPiece(board[index]!!)?.changeOwner(nextPlayer);\n        findPiece(board[index]!!)?.omote();\n        stocks.push(board[index]!!);\n        board[index] = null;\n      }\n      board[index] = piece.id;\n      state.nextPlayer = nextPlayer.id === player1.id ? player2 : player1;\n    },\n    selectPieceId: (state, action: PayloadAction<{ pieceId: number|null}>) => {\n      const { pieceId } = action.payload;\n      state.selectedPieceId = pieceId;\n    },\n  },\n});\n\nexport const { move, selectPieceId } = boardSlice.actions;\n\nexport const selectNextPlayer = (state: RootState) => state.game.nextPlayer;\nexport const selectBoard = (state: RootState) => state.game.board;\nexport const selectStocks = (state: RootState) => state.game.stocks;\nexport const selectSelectedPieceId = (state: RootState) => state.game.selectedPieceId;\n\nexport default boardSlice.reducer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Board.module.css';\nimport { Piece, PieceType } from '../../domain/piece';\nimport { Position } from '../../domain/position';\nimport {\n  player2,\n  calculateMovablePositions,\n  calculatePuttablePositions,\n  confirmNariIfNeed\n} from '../../core/game';\nimport {\n  comparePositions,\n  convertToPositionFromIndex,\n  isContainPosition\n} from '../../utils/utils';\nimport {\n  move,\n  selectBoard,\n  selectNextPlayer,\n  selectPieceId,\n  selectSelectedPieceId\n} from '../game/gameSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { find as findPiece } from '../../factory/pieceFactory';\n\nconst Cell: React.FC<{\n  piece: Piece|null,\n  position: Position,\n  isActive: boolean,\n  isFocused: boolean,\n  onClickCell: (position: Position, piece: Piece|null, isActive: boolean) => void\n}> = ({ piece, position, isActive, isFocused, onClickCell }) => (\n  <div className={\n    classNames(styles.cell, {\n      [styles.activeCell]: isActive,\n      [styles.focusedCell]: isFocused,\n    })}\n    onClick={() => onClickCell(position, piece, isActive)}\n  >\n    {piece !== null && (\n      <div className={\n          classNames(styles.piece, {\n            [styles.upsideDown]: piece.ownerId === player2.id,\n            [styles.nari]: piece.type === PieceType.Narigin ||\n              piece.type === PieceType.Narikei ||\n              piece.type === PieceType.Narikyoh ||\n              piece.type === PieceType.Tokin ||\n              piece.type === PieceType.Ryuuoh ||\n              piece.type === PieceType.Ryuuma,\n          })\n        }\n      >\n        {`${piece}`}\n      </div>\n    )}\n  </div>\n);\n\nexport const Board = () => {\n  const dispatch = useDispatch();\n  const board = useSelector(selectBoard);\n  const selectedPieceId = useSelector(selectSelectedPieceId);\n  const nextPlayer = useSelector(selectNextPlayer);\n\n  const selectedPiece: Piece|null =\n    selectedPieceId !== null ? findPiece(selectedPieceId) : null;\n\n  const putPiece = (piece: Piece, position: Position) => {\n    dispatch(move({ pieceId: piece.id, position }));\n  };\n  const selectPiece = (piece: Piece|null) => {\n    dispatch(selectPieceId({ pieceId: piece?.id || null }))\n  };\n  const isSelectablePiece = (piece: Piece): boolean => piece.ownerId === nextPlayer.id;\n\n  let focusedPosition: Position|null = null;\n  if (selectedPieceId !== null && board.includes(selectedPieceId)) {\n    focusedPosition = convertToPositionFromIndex(board.indexOf(selectedPieceId));\n  }\n  let activePositions: Position[] = [];\n  if (selectedPieceId !== null) {\n    if (board.includes(selectedPieceId)) {\n      activePositions =\n        calculateMovablePositions(selectedPieceId, board, findPiece(selectedPieceId)?.ownerId === player2.id);\n    } else {\n      activePositions = calculatePuttablePositions(board);\n    }\n  }\n  return (\n    <div className={styles.board}>\n      {board.map((pieceId, i) =>\n        <Cell key={i}\n          position={convertToPositionFromIndex(i)}\n          piece={pieceId !== null ? findPiece(pieceId) : null}\n          isActive={isContainPosition(convertToPositionFromIndex(i), activePositions)}\n          isFocused={\n            focusedPosition !== null &&\n              comparePositions(convertToPositionFromIndex(i), focusedPosition)\n          }\n          onClickCell={(position, piece, isActive) => {\n            if (selectedPiece !== null) {\n              if (isActive) {\n                putPiece(selectedPiece, position);\n                confirmNariIfNeed(\n                  selectedPiece,\n                  position,\n                  board,\n                  selectedPiece.ownerId === player2.id,\n                  () => {\n                    selectedPiece.nari();\n                  }\n                );\n              }\n              selectPiece(null);\n            } else {\n              if (piece !== null && isSelectablePiece(piece)) {\n                selectPiece(piece);\n              }\n            }\n          }}\n        />\n      )}\n    </div>\n  )\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Player } from '../../domain/player';\nimport styles from './Name.module.css';\nimport { selectNextPlayer } from '../game/gameSlice';\nimport { useSelector } from 'react-redux';\n\nexport const Name: React.FC<{\n  player: Player,\n  upsideDown: boolean\n}> = ({ player, upsideDown }) => {\n  const nextPlayer = useSelector(selectNextPlayer);\n  return (\n    <div className={\n      classNames(styles.name, {\n        [styles.upsideDown]: upsideDown,\n        [styles.active]: nextPlayer.id === player.id,\n      })}\n    >\n      {`${player.name}`}\n    </div>\n  );\n};","import React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectSelectedPieceId,\n  selectStocks,\n  selectPieceId,\n  selectNextPlayer\n} from '../game/gameSlice';\nimport { Player } from '../../domain/player';\nimport { find as findPiece } from '../../factory/pieceFactory';\nimport styles from './Stock.module.css';\nimport { Piece } from '../../domain/piece';\nimport { groupBy } from '../../utils/utils';\n\nconst Row: React.FC<{\n  pieces: Piece[],\n  isFocused: boolean,\n  onClick: (piece: Piece, isFocused: boolean) => void\n}> = ({ pieces, isFocused, onClick }) => (\n  <div className={styles.row}>\n    <div className={\n      classNames(styles.piece, {\n        [styles.focusedPiece]: isFocused\n      })}\n      onClick={() => onClick(pieces[0], isFocused)}\n    >\n      {`${pieces[0]}`}\n    </div>\n    {`x${pieces.length}`}\n  </div>\n);\n\nexport const Stock: React.FC<{ player: Player, upsideDown: boolean }> =\n  ({ player, upsideDown }) => {\n    const dispatch = useDispatch();\n    const pieceIds = useSelector(selectStocks);\n    const selectedPieceId = useSelector(selectSelectedPieceId);\n    const nextPlayer = useSelector(selectNextPlayer);\n    const pieces = pieceIds.map(id => findPiece(id)!!)\n      .filter(piece => piece.ownerId === player.id);\n\n    const selectPiece = (piece: Piece|null) => {\n      dispatch(selectPieceId({ pieceId: piece?.id || null }));\n    };\n    const isSelectablePiece = (piece: Piece): boolean => piece.ownerId === nextPlayer.id;\n\n    return (\n      <div className={classNames(styles.stock, { [styles.upsideDown]: upsideDown })}>\n        {groupBy(pieces, piece => piece.type)\n          .sort((a, b) => a[0].type - b[0].type)\n          .map(pieces =>\n            <Row key={pieces[0].type}\n              pieces={pieces}\n              isFocused={pieces.filter(piece => piece.id === selectedPieceId).length > 0}\n              onClick={(piece, isSelected) => {\n                if (!isSelected && isSelectablePiece(piece))\n                  selectPiece(piece);\n                else\n                  selectPiece(null);\n              }}\n            />\n          )}\n      </div>\n    );\n  };\n","import React from 'react';\nimport { player1, player2 } from '../../core/game';\nimport { Board } from '../board/Board';\nimport { Name } from '../name/Name';\nimport { Stock } from '../stock/Stock';\nimport styles from './Game.module.css';\n\nexport const Game = () => (\n  <div className={styles.game}>\n    <Name player={player2} upsideDown={true} />\n    <div className={styles.container}>\n      <Stock player={player2} upsideDown={true} />\n      <Board />\n      <Stock player={player1} upsideDown={false} />\n    </div>\n    <Name player={player1} upsideDown={false} />\n  </div>\n);\n","import React from 'react';\r\nimport { Game } from './features/game/Game';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Shogi</h1>\r\n      </header>\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport gameReducer from '../features/game/gameSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2NjSw\",\"cell\":\"Board_cell__3urXG\",\"activeCell\":\"Board_activeCell__24qA5\",\"focusedCell\":\"Board_focusedCell__1hxiX\",\"piece\":\"Board_piece__1gzEb\",\"nari\":\"Board_nari__1Yqpn\",\"upsideDown\":\"Board_upsideDown___tTD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stock\":\"Stock_stock__3bwT7\",\"row\":\"Stock_row__1imNm\",\"piece\":\"Stock_piece__22W17\",\"focusedPiece\":\"Stock_focusedPiece__1h9dz\",\"upsideDown\":\"Stock_upsideDown__3g496\"};"],"sourceRoot":""}